meta = setmetatable
kind = getmetatable
call = vim.fn.system

word = {
	__tostring = function(w) return w.name end,
	__unm = function(w) 
		w.value = false
		return w 
	end,
	__div = function(w, v)
		w.value = v
		return w
	end,
	new = function(n, v)
		w = { name = n, value = v }
		return meta(w, word)
	end,
	pairs = function(t, i)
		i = i + 1
		local w = t[i]
		if w and kind(w) == word then
			return i, w.name, w.value
		end
	end,
	expand = function(t)
		for i, n, v in word.pairs, t, 0 do
			t[n] = v
			t[i] = nil
		end
	end
}

setmetatable(_G, {
	__index = function(_, k)
		return word.new(k, true)
	end
})

del = function(key, table)
	(table or _G)[key.name or key] = nil
end

use = function(files)
	for _, file in pairs(files) do
		file = tostring(file)
		del(file, package.loaded)
		require(file)
	end
end

reuse = function()
	file = vim.fn.expand('%:p:t') 
	print('Reloading', vim.fn.stdpath('config') .. '/' .. file)
	use { file }
end

opt = function(t)
	word.expand(t)
	for k,v in pairs(t) do
		vim.opt[k] = v
	end
end
