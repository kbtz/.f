[
	/*
		vscode specific */
	{
		"key": "ctrl+tab",
		"command": "workbench.action.nextEditorInGroup"
	},
	{
		"key": "ctrl+shift+tab",
		"command": "workbench.action.previousEditorInGroup"
	},
	/*
		nvim leader */
	{
		"key": "- escape",
		"command": "workbench.action.closeActiveEditor",
		"when": "!inputFocus && !editorTextFocus"
	},
	{
		"key": "- escape",
		"command": "workbench.action.closeGroup",
		"when": "!inputFocus && activeEditorGroupEmpty && multipleEditorGroups"
	},
	{
		"key": "- n",
		"command": "workbench.action.quickOpen",
		"when": "!inputFocus && !editorTextFocus || activeEditorGroupEmpty"
	},
	/*
		vscode leader */
	{
		"key": "= -",
		"command": "workbench.action.focusActiveEditorGroup",
		"when": "!editorTextFocus"
	},
	{
		"key": "= escape",
		"command": "workbench.action.closeSidebar",
		"when": "!editorTextFocus || neovim.mode != insert"
	},
	{
		"key": "= a",
		"command": "macros.sidebar",
		"when": "!editorTextFocus || neovim.mode != insert"
	},
	{
		"key": "= o",
		"command": "workbench.files.action.focusOpenEditorsView",
		"when": "!editorTextFocus || neovim.mode != insert"
	},
	{
		"key": "= e",
		"command": "workbench.files.action.focusFilesExplorer",
		"when": "!editorTextFocus || neovim.mode != insert"
	},
	{
		"key": "= u",
		"command": "macros.exp-collapsed",
		"when": "!editorTextFocus || neovim.mode != insert"
	},
	{
		"key": "= i",
		"command": "workbench.action.openSettingsJson",
		"when": "!editorTextFocus || neovim.mode != insert"
	},
	{
		"key": "= shift+i",
		"command": "workbench.action.openGlobalSettings",
		"when": "!editorTextFocus || neovim.mode != insert"
	},
	{
		"key": "= k",
		"command": "workbench.action.openGlobalKeybindingsFile",
		"when": "!editorTextFocus || neovim.mode != insert"
	},
	{
		"key": "= shift+k",
		"command": "workbench.action.openGlobalKeybindings",
		"when": "!editorTextFocus || neovim.mode != insert"
	},
	{
		"key": "= c",
		"command": "workbench.action.showCommands",
		"when": "!editorTextFocus || neovim.mode != insert"
	},
	{
		"key": "= x",
		"command": "workbench.view.extensions",
		"when": "!editorTextFocus || neovim.mode != insert"
	},
	{
		"key": "= d",
		"command": "workbench.action.toggleDevTools",
		"when": "!editorTextFocus || neovim.mode != insert"
	},
	/*
		groups */
	{
		"key": "ctrl+alt+p",
		"command": "workbench.action.focusNextGroup"
	},
	{
		"key": "ctrl+alt+z",
		"command": "workbench.action.focusPreviousGroup"
	},
	{
		"key": "ctrl+alt+j",
		"command": "workbench.action.joinAllGroups"
	},
	{
		"key": "ctrl+alt+k l",
		"command": "workbench.action.newGroupAbove"
	},
	{
		"key": "ctrl+alt+k e",
		"command": "workbench.action.newGroupBelow"
	},
	{
		"key": "ctrl+alt+k o",
		"command": "workbench.action.newGroupLeft"
	},
	{
		"key": "ctrl+alt+n u",
		"command": "workbench.action.newGroupRight"
	},
	{
		"key": "ctrl+alt+l",
		"command": "workbench.action.increaseViewHeight"
	},
	{
		"key": "ctrl+alt+e",
		"command": "workbench.action.decreaseViewHeight"
	},
	{
		"key": "ctrl+alt+o",
		"command": "workbench.action.decreaseViewWidth"
	},
	{
		"key": "ctrl+alt+u",
		"command": "workbench.action.increaseViewWidth"
	},
	/*
		nvim forwards */
	{
		"key": "alt+enter",
		"command": "vscode-neovim.send",
		"args": "<M-CR>",
		"when": "editorTextFocus && neovim.init"
	},
	{
		"key": "alt+tab",
		"command": "vscode-neovim.send",
		"args": "<M-TAB>",
		"when": "editorTextFocus && neovim.init"
	},
	{
		"key": "ctrl+space",
		"command": "vscode-neovim.send",
		"args": "<C-SPACE>",
		"when": "editorTextFocus && neovim.mode == normal"
	},
	{
		"key": "shift+backspace",
		"command": "vscode-neovim.send",
		"args": "<C-A-SPACE>",
		"when": "editorTextFocus && neovim.mode == normal"
	},
	/*
		explorer */
	{
		"key": "space",
		"command": "list.toggleSelection",
		"when": "filesExplorerFocus && !inputFocus"
	},
	{
		"key": "enter",
		"command": "macros.exp-open",
		"when": "filesExplorerFocus && !explorerResourceIsFolder && !inputFocus"
	},
	{
		"key": "enter",
		"command": "macros.exp-enter",
		"when": "filesExplorerFocus && explorerResourceIsFolder && !inputFocus"
	}
]