alias ?='wat'
alias ??='xpr'
alias ?:='test'
alias +x='chmod +x'

alias opt='shopt -s'
alias opt!='shopt -u'
alias debug='set -x'
alias debug!='set +x'
alias xdebug='opt extdebug'
alias xdebug!='opt! extdebug'

alias cl='clear && read'
alias readln='IFS= read'
alias mkd='mkdir -p'
alias mkt='mktemp'

alias loop='while :; do'
alias step='read; done'
alias next='continue'
alias my='local'
alias del='unset'

alias and='test $? -eq 0 &&'
alias or='test $? -eq 0 ||'

alias ret='return'
alias ret!='return 1'
alias ret?='return $?'
alias arg?='test $# -ne 0 &&'
alias arg!='test $# -eq 0 &&'
alias argc='test $# -eq'
alias argc+='test $# -ge'

alias pop='local val=$1; shift'

xpr() {
	expr "$@" &> /dev/null
	ret?
}

xpd () {
	?: -z "${BASH_ALIASES[$1]}" && { $@; r?; }
	local exp=(${BASH_ALIASES[$1]})
	xpd ${exp[0]} ${exp[@]:1} ${@:2}
}

wat() {
	?: -f "$1" && {
		tabs 2
		nvimpager $1
		ret
	}
	

	my def
	read def <<< `type "$1"`;
	echo -n "$def "
	
	?: "${def: -8:4}" = func && {
		fn? $1
		color 8; echo -n ${fnf/*\//} $fnl; color
		type "$1" | tail -n+4 | head -n-1 \
			| nvimpager -c -- -c 'setf sh'
	} || echo
	
	del def
}

fn?() {
	opt extdebug
	read __ fnl fnf < <(declare -F $1)
	opt! extdebug

	?: $fnf || ret!
}

color() {
	?? $# \
		&& echo -ne "\001\e[38;5;$1m\002" \
		|| echo -ne "\001\e[0;0m\002"
}

shh() {
	$* &> /dev/null
}
	
alias W='watch '
Wf() {
    watch -x bash -i -c "$@"
}

watcher() {
	[ $# -gt 1 ] || return 1
	buffer=$(mktemp)
	interval=$1; shift
	cmd="$@"
	
	while true; do
		{ time eval $cmd 2>&1; } > $buffer
		
		clear
		echo \"$cmd\"
		cat $buffer
		
		[ $interval -gt 0 ] \
			&& sleep $interval \
			|| read
	done
}

h() {
	history | grep $*
}

err() { echo "bash.f: $*" >&2; }

command_not_found_handle() {
	local cmd=${BASH_ALIASES[$1]}
	
	?: -n "$cmd"
	or err "Command not found $1" 
	and ret!
	
	echo "'$*' expanded to '$cmd ${@:2}'" >&2
	$cmd ${@:2}
}

i() {
	man $1
	or info $1
	or help $1
}
